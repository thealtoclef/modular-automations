name: ðŸš€ Release Helm Chart

on:
  workflow_call:
    inputs:
      runs_on:
        description: The runner to use for the job
        default: "self-hosted"
        required: false
        type: string
      chart_dirs:
        description: "The directories containing Helm charts to release"
        default: "charts"
        required: false
        type: string

jobs:
  setup:
    runs-on: ${{ inputs.runs_on }}
    outputs:
      changed: ${{ steps.list-changed.outputs.changed }}
      chart_paths: ${{ steps.list-changed.outputs.chart_paths }}
    steps:
      - name: Setup Kube tools
        uses: yokawasa/action-setup-kube-tools@v0.11.2
        with:
          setup-tools: |
            yq
            helm

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: List changed charts
        id: list-changed
        run: |
          latest_tag=$( if ! git describe --tags --abbrev=0 2> /dev/null ; then git rev-list --max-parents=0 --first-parent HEAD ; fi )

          changed=$(ct list-changed --chart-dirs "${{ inputs.chart_dirs }}" --since "${latest_tag}" --target-branch "${{ github.ref_name }}")
          echo "${changed}"

          # Initialize empty array for charts to release
          declare -a charts_to_release

          # Process each changed chart
          while IFS= read -r chart_path; do
            if [[ -n "${chart_path}" ]]; then
              name=$(yq ".name" < "${chart_path}/Chart.yaml")
              version=$(yq ".version" < "${chart_path}/Chart.yaml")
              tag_name="${name}-${version}"

              if git tag -l "${tag_name}" | grep -q .; then
                echo "Tag ${tag_name} already exists, skipping chart ${name}"
              else
                echo "Will release ${chart_path}"
                charts_to_release+=("${chart_path}")
              fi
            fi
          done <<< "${changed}"

          if [ ${#charts_to_release[@]} -eq 0 ]; then
            echo "No charts to release"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            # Create a properly escaped JSON array
            json_array=$(printf '%s\n' "${charts_to_release[@]}" | jq -R . | jq -sc .)
            echo "chart_paths=${json_array}" >> $GITHUB_OUTPUT
          fi

  release:
    runs-on: ${{ inputs.runs_on }}
    needs: [setup]
    permissions:
      contents: write
      packages: write
    if: needs.setup.outputs.changed == 'true'
    strategy:
      matrix:
        chart_path: ${{ fromJSON(needs.setup.outputs.chart_paths) }}
    steps:
      - name: Setup Kube tools
        uses: yokawasa/action-setup-kube-tools@v0.11.2
        with:
          setup-tools: |
            yq
            helm

      - name: Checkout
        uses: actions/checkout@v4

      - name: Parse Chart.yaml
        id: parse-chart
        run: |
          chart_path="${{ matrix.chart_path }}"
          name=$(yq ".name" < ${chart_path}/Chart.yaml)
          version=$(yq ".version" < ${chart_path}/Chart.yaml)
          description=$(yq ".description" < ${chart_path}/Chart.yaml)

          echo "chart_path=${chart_path}" >> $GITHUB_OUTPUT
          echo "chart_name=${name}" >> $GITHUB_OUTPUT
          echo "chart_version=${version}" >> $GITHUB_OUTPUT
          echo "chart_description=${description}" >> $GITHUB_OUTPUT
          echo "tag_name=${name}-${version}" >> $GITHUB_OUTPUT

      - name: Release chart to GitHub Container Registry
        uses: appany/helm-oci-chart-releaser@v0.4.2
        with:
          path: ${{ steps.parse-chart.outputs.chart_path }}
          name: ${{ steps.parse-chart.outputs.chart_name }}
          tag: ${{ steps.parse-chart.outputs.chart_version }}
          registry: ghcr.io
          repository: thealtoclef/helm-charts
          registry_username: ${{ github.actor }}
          registry_password: ${{ github.token }}
          update_dependencies: "true"

      - name: Make GitHub release
        uses: softprops/action-gh-release@v2.1.0
        with:
          body: |
            ${{ steps.parse-chart.outputs.chart_description }}

            Source commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}
          tag_name: ${{ steps.parse-chart.outputs.tag_name }}
